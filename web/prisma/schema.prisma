// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 案件情報（メール1件 = Job 1レコード）
model Job {
  id          String   @id @default(cuid())

  // AI抽出された情報（公開用）
  title       String   // 公開用タイトル
  company     String?  // 企業名
  grade       String?  // グレード（S1, S2, S3, S4, S5, SS, MG）
  location    String?  // 勤務地
  unitPrice   Int?     // 単価（月額、単位：円）
  summary     String?  @db.Text // 案件概要
  description String?  @db.Text // 詳細説明

  // メール原文
  originalTitle   String  // 元のメールタイトル（件名）
  originalBody    String  @db.Text // 元のメール本文
  senderEmail     String  // 送信者メールアドレス
  receivedAt      DateTime // メール受信日時

  // スキルタグ（多対多）
  skills      JobSkill[]

  // メタ情報
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([receivedAt])
  @@index([grade])
  @@index([company])
  @@index([unitPrice])
}

// スキルマスタ
model Skill {
  id        String        @id @default(cuid())
  name      String        @unique // React, Go, TypeScript等
  category  String?       // frontend, backend, infrastructure等
  jobs      JobSkill[]
  talents   TalentSkill[]

  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

// 案件とスキルの中間テーブル
model JobSkill {
  id      String @id @default(cuid())
  job     Job    @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId   String
  skill   Skill  @relation(fields: [skillId], references: [id], onDelete: Cascade)
  skillId String

  @@unique([jobId, skillId])
  @@index([jobId])
  @@index([skillId])
}

// 人材情報（メール1件 = Talent 1レコード）
model Talent {
  id          String   @id @default(cuid())

  // AI抽出された情報（公開用）
  name        String?  // 名前（匿名の場合はニックネームや「非公開」）
  age         Int?     // 年齢
  position    String?  // ポジション（SE, チームリーダー, テックリード, PMO, PM）
  workStyle   String?  // 勤務形態（常駐可、リモート希望など）
  location    String?  // 希望勤務地
  unitPrice   Int?     // 希望単価（月額、単位：円）
  summary     String?  @db.Text // 経歴概要
  description String?  @db.Text // 詳細経歴

  // メール原文
  originalTitle   String  // 元のメールタイトル（件名）
  originalBody    String  @db.Text // 元のメール本文
  senderEmail     String  // 送信者メールアドレス
  receivedAt      DateTime // メール受信日時

  // スキルタグ（多対多）
  skills      TalentSkill[]

  // メタ情報
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([receivedAt])
  @@index([position])
  @@index([age])
  @@index([unitPrice])
}

// 人材とスキルの中間テーブル
model TalentSkill {
  id        String @id @default(cuid())
  talent    Talent @relation(fields: [talentId], references: [id], onDelete: Cascade)
  talentId  String
  skill     Skill  @relation(fields: [skillId], references: [id], onDelete: Cascade)
  skillId   String

  @@unique([talentId, skillId])
  @@index([talentId])
  @@index([skillId])
}
